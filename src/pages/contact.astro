---
import Base from "@/layouts/Base.astro";
import FormField from "@/components/FormField.astro";
import suite from "@/utils/suite";

const errors = { name: "", email: "", message: "" };
if (Astro.request.method === "POST") {
  try {
    const form = await Astro.request.formData();
    const data = {
      name: form.get("name")?.toString(),
      email: form.get("email")?.toString(),
      message: form.get("message")?.toString(),
      _gotcha: form.get("_gotcha")?.toString(),
    }
    const validationResult = suite(data);
    
    if (validationResult.isValid()) {
      const url = `https://script.google.com/macros/s/${import.meta.env.SHEETS_ID}/exec`;

      fetch(url, {
        method: "POST",
        body: JSON.stringify(data),
        headers: {
          "Content-Type": "text/plain;charset=utf-8",
        },
      });

      return Astro.redirect("/thank-you", 302);
    } else {
      if (validationResult.hasErrors("name")) {
        errors.name += validationResult.getErrors("name")[0];
      }
      
      if (validationResult.hasErrors("email")) {
        errors.email += validationResult.getErrors("email")[0];
      }

      if (validationResult.hasErrors("message")) {
        errors.message += validationResult.getErrors("message")[0];
      }
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---
<Base title="rhyses pieces | contact">
  <h1>Contact me</h1>
  <p>You can find me at these places: </p>
  <ul>
    <li><a href="https://github.com/rhyses-pieces" rel="nofollow">GitHub</a></li>
    <li><a href="https://www.linkedin.com/in/irene-kim-1a8079115/" rel="nofollow">LinkedIn</a></li>
    <li><a href="https://rhyses-pieces.itch.io/" rel="nofollow">Itch.io</a></li>
  </ul>

  <p>... or you can: </p>

  <section>
    <h2>Send me a message</h2>
    <form id="contact" method="post" novalidate>
      <label for="name">
        Name
        <FormField el="input" type="text" name="name" id="name" aria-describedby="name-help" required />
      </label>
      <span id="name-help" aria-live="polite">
        {errors.name && <small class="error"><strong>Error:</strong> {errors.name}</small>}
      </span>
      <label for="email">
        Email
        <FormField el="input" type="email" name="email" id="email" aria-describedby="email-help" required />
      </label>
      <span id="email-help" aria-live="polite">
        {errors.email && <small class="error"><strong>Error:</strong> {errors.email}</small>}
      </span>
      <label for="message">
        Message
        <FormField el="textarea" name="message" id="message" rows="10" aria-describedby="message-help" required minlength="2" />
      </label>
      <span id="message-help" aria-live="polite">
        {errors.message && <small class="error"><strong>Error:</strong> {errors.message}</small>}
      </span>
      <input type="hidden" name="_gotcha" tabindex="-1" autocomplete="off" style="display:none" />
      <button type="submit">Send</button>
    </form>
  </section>
</Base>

<style>
  section {
    margin: 2rem 2rem 5rem;
    padding: 1rem;
    border: var(--border) var(--border-color);
    border-radius: var(--container-radius);
    box-shadow: var(--box-shadow);
  }

  form {
    display: flex;
    flex-flow: column;
    
    label {
      display: flex;
      flex-flow: inherit;
      gap: 0.5rem;
      margin-top: 1rem;
    }

    [id$="-help"] {
      opacity: 0.95;
      margin-top: 0.5rem;

      & :global(.error) {
        padding: 0.25rem 0.5rem;
        background-color: var(--red-bg);
        color: var(--text-on-red);
        border: 1px solid var(--red);
        border-radius: var(--border-radius);
      }
    }

    button {
      width: min-content;
      align-self: center;
      font-size: 2rem;
      margin: 1rem 0;
    }
  }
</style>