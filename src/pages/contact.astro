---
import Base from "@/layouts/Base.astro";
---
<Base title="rhyses pieces | contact">
  <h1>Contact me</h1>
  <p>You can find me at these places: </p>
  <ul>
    <li><a href="https://github.com/rhyses-pieces" rel="nofollow">GitHub</a></li>
    <li><a href="https://www.linkedin.com/in/irene-kim-1a8079115/" rel="nofollow">LinkedIn</a></li>
    <li><a href="https://rhyses-pieces.itch.io/" rel="nofollow">Itch.io</a></li>
  </ul>

  <p>... or you can: </p>

<<<<<<< HEAD
  <section>
=======
  <section id="form">
    <h2>Directly email me</h2>
    <p>You can click below to reveal my e-mail address. A prompt will pop up and ask you for a password. The password is <strong id="password">ELYSIUM</strong> but in all lowercase.</p>
    <altcha-widget 
      obfuscated="iLusgai66UhrpeRVuniHB0fNb7I2eefbrmiq+5LHCcqf6CXihm1DH40Z0rwI2BBaYBB/YrrX6tmmfUnE0hbAswbN1Kk=?key=(prompt:Enter password)"
      floating="bottom"
      name="emailObfuscation"
      class="spoiler"
      debug
      test={import.meta.env.DEV ? true : undefined}
    >
      <button class="link">Click to reveal</button>
    </altcha-widget>

    <Separator />

>>>>>>> 28bc59f (fixed commits and refactor scripts/styles)
    <h2>Send me a message</h2>
    <form id="contact" name="contact" method="post" action="/thank-you" data-netlify="true" netlify-honeypot="bot-field">
      <label for="name">
        Name
        <input type="text" name="name" id="name" required />
      </label>
      <span id="name-help" aria-live="polite">
        
      </span>
      <label for="email">
        Email
        <input type="email" name="email" id="email" required />
      </label>
      <span id="email-help" aria-live="polite">
        
      </span>
      <label for="message">
        Message
        <textarea name="message" id="message" rows="10" minlength="2" required></textarea>
      </label>
      <span id="message-help" aria-live="polite">
        
      </span>
      <input type="hidden" name="bot-field" tabindex="-1" autocomplete="off" style="display:none" />
      <button type="submit">Send</button>
    </form>
  </section>
</Base>

<style>
<<<<<<< HEAD
  section {
    margin: 2rem 2rem 5rem;
=======
  :root {
    --altcha-border-width: 2px;
    --altcha-color-border: var(--border-color);
    --altcha-color-base: var(--background);
    --altcha-color-text: var(--text);
    --altcha-color-error-text: var(--red);
    --altcha-color-footer-bg: var(--secondary);
  }

  .link {
    cursor: pointer;
    background-color: transparent;
    border: none;
  }

  .spoiler {
    display: grid;
    place-content: center;
    margin-top: 1rem;

    &:has([data-state="verifying"]) * {
      transition: none;
      background-color: var(--text);
      border: none;
    }
  }

  #password {
    font-family: var(--accent-font);
    letter-spacing: 0.0175em;
    color: color-mix(in oklab, var(--text) 70%, var(--background));
  }

  #form {
    margin: 0 2rem 5rem;
>>>>>>> 28bc59f (fixed commits and refactor scripts/styles)
    padding: 1rem;
    border: var(--border) var(--border-color);
    border-radius: var(--container-radius);
    box-shadow: var(--box-shadow);
  }

  form {
    display: flex;
    flex-flow: column;
    
    label {
      display: flex;
      flex-flow: inherit;
      gap: 0.5rem;
      margin-top: 1rem;
    }

    [id$="-help"] {
      opacity: 0.95;
      margin-top: 0.5rem;

      :global(.error) {
        padding: 0.25rem 0.5rem;
        background-color: var(--red-bg);
        color: var(--text-on-red);
        border: 1px solid var(--red);
        border-radius: var(--border-radius);
      }
    }

    button {
      width: min-content;
      align-self: center;
      font-size: 2rem;
      margin: 1rem 0;
    }
  }
</style>

<script>
import suite from "@/utils/suite";

document.addEventListener("DOMContentLoaded", () => {
  const nameField = document.getElementById("name");
  const emailField = document.getElementById("email");
  const messageField = document.getElementById("message");

  const nameError = document.getElementById("name-help");
  const emailError = document.getElementById("email-help");
  const messageError = document.getElementById("message-help");

  nameField?.addEventListener("input", () => {
    // @ts-ignore
    let name = { name: nameField.value };
    let result = suite(name);
    if (result.isValid("name")) {
      nameError!.innerHTML = "";
    } else if (result.hasErrors("name")) {
      nameError!.innerHTML = `<small class="error"><strong>Error:</strong> ${result.getErrors("name")[0]}</small>`;
    }
  });

  emailField?.addEventListener("input", () => {
    // @ts-ignore
    let email = { email: emailField.value };
    let result = suite(email);
    if (result.isValid("email")) {
      emailError!.innerHTML = "";
    } else if (result.hasErrors("email")) {
      emailError!.innerHTML = `<small class="error"><strong>Error:</strong> ${result.getErrors("email")[0]}</small>`;
    }
  });

  messageField?.addEventListener("input", () => {
    // @ts-ignore
    let message = { message: messageField.value };
    let result = suite(message);
    if (result.isValid("message")) {
      messageError!.innerHTML = "";
    } else if (result.hasErrors("message")) {
      messageError!.innerHTML = `<small class="error"><strong>Error:</strong> ${result.getErrors("message")[0]}</small>`;
    }
  });
});
</script>