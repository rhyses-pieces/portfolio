---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Base from "@/layouts/Base.astro";
import Project from "@/components/Project.astro";

export const getStaticPaths = (async () => {
  const allProjects = await getCollection("projects");
  const tags = [...new Set(allProjects.map(project => project.data.tags).flat())];

  return tags.map(tag => {
    const filteredProjects = allProjects.filter(project => project.data.tags.includes(tag));
    return {
      params: { tag },
      props: { tags: tags, projects: filteredProjects },
    }
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { tags, projects } = Astro.props;

let index: number = 0;
projects.forEach(() => { index++; });
---
<Base title={`rhyses pieces | tagged: #${tag}`}>
  <section>
    <h1>#{tag} ({index == 1 ? "1 post" : index + " posts"})</h1>
    <nav aria-label="tag navigation">
      <ul>
        See more: 
        {tags.map(tag => (
          <li><a href={`/projects/tags/${tag}`}>{tag}</a></li>
        ))}
      </ul>
    </nav>
    <div>
      {projects.map(project => (
        <Project 
          transitionName={`project-${project.slug}`}
          title={project.data.title}
          slug={`/projects/${project.slug}`}
          date={project.data.date}
          tags={project.data.tags}
          projectUrl={project.data.projectUrl}
          imageUrl={project.data.image.source.src}
          imageAlt={project.data.image.alt}
        />
      ))}
    </div>
  </section>
</Base>

<style>
  section {
    grid-column: 1 / -1;
    max-width: 1000px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    grid-auto-flow: row;
    gap: 1.5rem;

    & h1 { grid-column: 1 / -1; }
    & nav {
      grid-column: 1 / -1;

      & > ul {
        list-style: none;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 0;
        column-gap: 2rem;
        row-gap: 1rem;

        & > li {
          white-space: nowrap;

          &::marker { content: "#";}
        }
      }
    }
  }
</style>